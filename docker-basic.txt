Docker has a client-server architecture. It has a single binary, docker, that can act as both client and server. 
As a client, the docker binary passes requests to the Docker daemon, and then processes those requests when they are returned.


The docker cp command allows you to copy files and directories from a container's file system to your local machine, whether the container is running or stopped.

docker cp container:src_path dest_path 






# docker mirror


"registry-mirrors": ["https://docker.mirrors.sjtug.sjtu.edu.cn"]


docker info



docker version
docker network list






# first container
docker run -i -t ubuntu /bin/bash

The -i flag keeps STDIN open from the container, even if we're not attached to it.

The -t flag is the other half and tells Docker to assign a pseudo-tty to the container we're about to create. This provides us with an interactive shell in the new container.
